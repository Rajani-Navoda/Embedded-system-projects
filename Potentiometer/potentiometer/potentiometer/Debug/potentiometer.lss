
potentiometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000041e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000041e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000450  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006b5  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000612  00000000  00000000  00000b65  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000249  00000000  00000000  00001177  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000344  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001728  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

#include <avr/io.h>

int main(void)
{
    DDRB = DDRB  | 0b00011111;
  80:	84 b1       	in	r24, 0x04	; 4
  82:	8f 61       	ori	r24, 0x1F	; 31
  84:	84 b9       	out	0x04, r24	; 4
	DDRC = DDRC & 0b11111110;
  86:	87 b1       	in	r24, 0x07	; 7
  88:	8e 7f       	andi	r24, 0xFE	; 254
  8a:	87 b9       	out	0x07, r24	; 7
	ADMUX = (ADMUX & 0b01111111) | 0b01000000; //set the reference voltage
  8c:	ec e7       	ldi	r30, 0x7C	; 124
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	80 81       	ld	r24, Z
  92:	8f 73       	andi	r24, 0x3F	; 63
  94:	80 64       	ori	r24, 0x40	; 64
  96:	80 83       	st	Z, r24
	ADMUX = ADMUX & 0b11111000; //set ADC0 as analog input
  98:	80 81       	ld	r24, Z
  9a:	88 7f       	andi	r24, 0xF8	; 248
  9c:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | 0b00000111;
  9e:	ea e7       	ldi	r30, 0x7A	; 122
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	80 81       	ld	r24, Z
  a4:	87 60       	ori	r24, 0x07	; 7
  a6:	80 83       	st	Z, r24
	ADCSRA = ADCSRA | 0b10000000;
  a8:	80 81       	ld	r24, Z
  aa:	80 68       	ori	r24, 0x80	; 128
  ac:	80 83       	st	Z, r24
	
	
    while (1) 
    {
		ADCSRA = ADCSRA | 0b01000000;
  ae:	ea e7       	ldi	r30, 0x7A	; 122
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	80 64       	ori	r24, 0x40	; 64
  b6:	80 83       	st	Z, r24
		while(ADCSRA & 0b01000000);
  b8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  bc:	86 fd       	sbrc	r24, 6
  be:	fc cf       	rjmp	.-8      	; 0xb8 <main+0x38>
		float vin = ADCW * 5.0/1024;
  c0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  c4:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 bf 00 	call	0x17e	; 0x17e <__floatunsisf>
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	40 ea       	ldi	r20, 0xA0	; 160
  d6:	50 e4       	ldi	r21, 0x40	; 64
  d8:	0e 94 01 01 	call	0x202	; 0x202 <__mulsf3>
  dc:	20 e0       	ldi	r18, 0x00	; 0
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	40 e8       	ldi	r20, 0x80	; 128
  e2:	5a e3       	ldi	r21, 0x3A	; 58
  e4:	0e 94 01 01 	call	0x202	; 0x202 <__mulsf3>
  e8:	6b 01       	movw	r12, r22
  ea:	7c 01       	movw	r14, r24
		PORTB = PORTB & 0b11100000;
  ec:	85 b1       	in	r24, 0x05	; 5
  ee:	80 7e       	andi	r24, 0xE0	; 224
  f0:	85 b9       	out	0x05, r24	; 5
		if (vin > 4)
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e8       	ldi	r20, 0x80	; 128
  f8:	50 e4       	ldi	r21, 0x40	; 64
  fa:	c7 01       	movw	r24, r14
  fc:	b6 01       	movw	r22, r12
  fe:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__gesf2>
 102:	18 16       	cp	r1, r24
 104:	24 f4       	brge	.+8      	; 0x10e <main+0x8e>
			PORTB = PORTB | 0b00011111;
 106:	85 b1       	in	r24, 0x05	; 5
 108:	8f 61       	ori	r24, 0x1F	; 31
 10a:	85 b9       	out	0x05, r24	; 5
 10c:	d0 cf       	rjmp	.-96     	; 0xae <main+0x2e>
		else if (vin > 3)
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	40 e4       	ldi	r20, 0x40	; 64
 114:	50 e4       	ldi	r21, 0x40	; 64
 116:	c7 01       	movw	r24, r14
 118:	b6 01       	movw	r22, r12
 11a:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__gesf2>
 11e:	18 16       	cp	r1, r24
 120:	24 f4       	brge	.+8      	; 0x12a <main+0xaa>
			PORTB = PORTB | 0b00001111;
 122:	85 b1       	in	r24, 0x05	; 5
 124:	8f 60       	ori	r24, 0x0F	; 15
 126:	85 b9       	out	0x05, r24	; 5
 128:	c2 cf       	rjmp	.-124    	; 0xae <main+0x2e>
		else if (vin > 2)
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	40 e0       	ldi	r20, 0x00	; 0
 130:	50 e4       	ldi	r21, 0x40	; 64
 132:	c7 01       	movw	r24, r14
 134:	b6 01       	movw	r22, r12
 136:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__gesf2>
 13a:	18 16       	cp	r1, r24
 13c:	24 f4       	brge	.+8      	; 0x146 <main+0xc6>
			PORTB = PORTB | 0b00000111;
 13e:	85 b1       	in	r24, 0x05	; 5
 140:	87 60       	ori	r24, 0x07	; 7
 142:	85 b9       	out	0x05, r24	; 5
 144:	b4 cf       	rjmp	.-152    	; 0xae <main+0x2e>
		else if (vin > 1)
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	40 e8       	ldi	r20, 0x80	; 128
 14c:	5f e3       	ldi	r21, 0x3F	; 63
 14e:	c7 01       	movw	r24, r14
 150:	b6 01       	movw	r22, r12
 152:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__gesf2>
 156:	18 16       	cp	r1, r24
 158:	24 f4       	brge	.+8      	; 0x162 <main+0xe2>
			PORTB = PORTB | 0b0000011;
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	83 60       	ori	r24, 0x03	; 3
 15e:	85 b9       	out	0x05, r24	; 5
 160:	a6 cf       	rjmp	.-180    	; 0xae <main+0x2e>
		else if (vin > 0)
 162:	20 e0       	ldi	r18, 0x00	; 0
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	a9 01       	movw	r20, r18
 168:	c7 01       	movw	r24, r14
 16a:	b6 01       	movw	r22, r12
 16c:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__gesf2>
 170:	18 16       	cp	r1, r24
 172:	0c f0       	brlt	.+2      	; 0x176 <main+0xf6>
 174:	9c cf       	rjmp	.-200    	; 0xae <main+0x2e>
			PORTB = PORTB | 0b00000001;			
 176:	85 b1       	in	r24, 0x05	; 5
 178:	81 60       	ori	r24, 0x01	; 1
 17a:	85 b9       	out	0x05, r24	; 5
 17c:	98 cf       	rjmp	.-208    	; 0xae <main+0x2e>

0000017e <__floatunsisf>:
 17e:	e8 94       	clt
 180:	09 c0       	rjmp	.+18     	; 0x194 <__floatsisf+0x12>

00000182 <__floatsisf>:
 182:	97 fb       	bst	r25, 7
 184:	3e f4       	brtc	.+14     	; 0x194 <__floatsisf+0x12>
 186:	90 95       	com	r25
 188:	80 95       	com	r24
 18a:	70 95       	com	r23
 18c:	61 95       	neg	r22
 18e:	7f 4f       	sbci	r23, 0xFF	; 255
 190:	8f 4f       	sbci	r24, 0xFF	; 255
 192:	9f 4f       	sbci	r25, 0xFF	; 255
 194:	99 23       	and	r25, r25
 196:	a9 f0       	breq	.+42     	; 0x1c2 <__floatsisf+0x40>
 198:	f9 2f       	mov	r31, r25
 19a:	96 e9       	ldi	r25, 0x96	; 150
 19c:	bb 27       	eor	r27, r27
 19e:	93 95       	inc	r25
 1a0:	f6 95       	lsr	r31
 1a2:	87 95       	ror	r24
 1a4:	77 95       	ror	r23
 1a6:	67 95       	ror	r22
 1a8:	b7 95       	ror	r27
 1aa:	f1 11       	cpse	r31, r1
 1ac:	f8 cf       	rjmp	.-16     	; 0x19e <__floatsisf+0x1c>
 1ae:	fa f4       	brpl	.+62     	; 0x1ee <__floatsisf+0x6c>
 1b0:	bb 0f       	add	r27, r27
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <__floatsisf+0x36>
 1b4:	60 ff       	sbrs	r22, 0
 1b6:	1b c0       	rjmp	.+54     	; 0x1ee <__floatsisf+0x6c>
 1b8:	6f 5f       	subi	r22, 0xFF	; 255
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	8f 4f       	sbci	r24, 0xFF	; 255
 1be:	9f 4f       	sbci	r25, 0xFF	; 255
 1c0:	16 c0       	rjmp	.+44     	; 0x1ee <__floatsisf+0x6c>
 1c2:	88 23       	and	r24, r24
 1c4:	11 f0       	breq	.+4      	; 0x1ca <__floatsisf+0x48>
 1c6:	96 e9       	ldi	r25, 0x96	; 150
 1c8:	11 c0       	rjmp	.+34     	; 0x1ec <__floatsisf+0x6a>
 1ca:	77 23       	and	r23, r23
 1cc:	21 f0       	breq	.+8      	; 0x1d6 <__floatsisf+0x54>
 1ce:	9e e8       	ldi	r25, 0x8E	; 142
 1d0:	87 2f       	mov	r24, r23
 1d2:	76 2f       	mov	r23, r22
 1d4:	05 c0       	rjmp	.+10     	; 0x1e0 <__floatsisf+0x5e>
 1d6:	66 23       	and	r22, r22
 1d8:	71 f0       	breq	.+28     	; 0x1f6 <__floatsisf+0x74>
 1da:	96 e8       	ldi	r25, 0x86	; 134
 1dc:	86 2f       	mov	r24, r22
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	2a f0       	brmi	.+10     	; 0x1ee <__floatsisf+0x6c>
 1e4:	9a 95       	dec	r25
 1e6:	66 0f       	add	r22, r22
 1e8:	77 1f       	adc	r23, r23
 1ea:	88 1f       	adc	r24, r24
 1ec:	da f7       	brpl	.-10     	; 0x1e4 <__floatsisf+0x62>
 1ee:	88 0f       	add	r24, r24
 1f0:	96 95       	lsr	r25
 1f2:	87 95       	ror	r24
 1f4:	97 f9       	bld	r25, 7
 1f6:	08 95       	ret

000001f8 <__gesf2>:
 1f8:	0e 94 6e 01 	call	0x2dc	; 0x2dc <__fp_cmp>
 1fc:	08 f4       	brcc	.+2      	; 0x200 <__gesf2+0x8>
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	08 95       	ret

00000202 <__mulsf3>:
 202:	0e 94 14 01 	call	0x228	; 0x228 <__mulsf3x>
 206:	0c 94 a9 01 	jmp	0x352	; 0x352 <__fp_round>
 20a:	0e 94 9b 01 	call	0x336	; 0x336 <__fp_pscA>
 20e:	38 f0       	brcs	.+14     	; 0x21e <__mulsf3+0x1c>
 210:	0e 94 a2 01 	call	0x344	; 0x344 <__fp_pscB>
 214:	20 f0       	brcs	.+8      	; 0x21e <__mulsf3+0x1c>
 216:	95 23       	and	r25, r21
 218:	11 f0       	breq	.+4      	; 0x21e <__mulsf3+0x1c>
 21a:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_inf>
 21e:	0c 94 98 01 	jmp	0x330	; 0x330 <__fp_nan>
 222:	11 24       	eor	r1, r1
 224:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_szero>

00000228 <__mulsf3x>:
 228:	0e 94 ba 01 	call	0x374	; 0x374 <__fp_split3>
 22c:	70 f3       	brcs	.-36     	; 0x20a <__mulsf3+0x8>

0000022e <__mulsf3_pse>:
 22e:	95 9f       	mul	r25, r21
 230:	c1 f3       	breq	.-16     	; 0x222 <__mulsf3+0x20>
 232:	95 0f       	add	r25, r21
 234:	50 e0       	ldi	r21, 0x00	; 0
 236:	55 1f       	adc	r21, r21
 238:	62 9f       	mul	r22, r18
 23a:	f0 01       	movw	r30, r0
 23c:	72 9f       	mul	r23, r18
 23e:	bb 27       	eor	r27, r27
 240:	f0 0d       	add	r31, r0
 242:	b1 1d       	adc	r27, r1
 244:	63 9f       	mul	r22, r19
 246:	aa 27       	eor	r26, r26
 248:	f0 0d       	add	r31, r0
 24a:	b1 1d       	adc	r27, r1
 24c:	aa 1f       	adc	r26, r26
 24e:	64 9f       	mul	r22, r20
 250:	66 27       	eor	r22, r22
 252:	b0 0d       	add	r27, r0
 254:	a1 1d       	adc	r26, r1
 256:	66 1f       	adc	r22, r22
 258:	82 9f       	mul	r24, r18
 25a:	22 27       	eor	r18, r18
 25c:	b0 0d       	add	r27, r0
 25e:	a1 1d       	adc	r26, r1
 260:	62 1f       	adc	r22, r18
 262:	73 9f       	mul	r23, r19
 264:	b0 0d       	add	r27, r0
 266:	a1 1d       	adc	r26, r1
 268:	62 1f       	adc	r22, r18
 26a:	83 9f       	mul	r24, r19
 26c:	a0 0d       	add	r26, r0
 26e:	61 1d       	adc	r22, r1
 270:	22 1f       	adc	r18, r18
 272:	74 9f       	mul	r23, r20
 274:	33 27       	eor	r19, r19
 276:	a0 0d       	add	r26, r0
 278:	61 1d       	adc	r22, r1
 27a:	23 1f       	adc	r18, r19
 27c:	84 9f       	mul	r24, r20
 27e:	60 0d       	add	r22, r0
 280:	21 1d       	adc	r18, r1
 282:	82 2f       	mov	r24, r18
 284:	76 2f       	mov	r23, r22
 286:	6a 2f       	mov	r22, r26
 288:	11 24       	eor	r1, r1
 28a:	9f 57       	subi	r25, 0x7F	; 127
 28c:	50 40       	sbci	r21, 0x00	; 0
 28e:	9a f0       	brmi	.+38     	; 0x2b6 <__mulsf3_pse+0x88>
 290:	f1 f0       	breq	.+60     	; 0x2ce <__mulsf3_pse+0xa0>
 292:	88 23       	and	r24, r24
 294:	4a f0       	brmi	.+18     	; 0x2a8 <__mulsf3_pse+0x7a>
 296:	ee 0f       	add	r30, r30
 298:	ff 1f       	adc	r31, r31
 29a:	bb 1f       	adc	r27, r27
 29c:	66 1f       	adc	r22, r22
 29e:	77 1f       	adc	r23, r23
 2a0:	88 1f       	adc	r24, r24
 2a2:	91 50       	subi	r25, 0x01	; 1
 2a4:	50 40       	sbci	r21, 0x00	; 0
 2a6:	a9 f7       	brne	.-22     	; 0x292 <__mulsf3_pse+0x64>
 2a8:	9e 3f       	cpi	r25, 0xFE	; 254
 2aa:	51 05       	cpc	r21, r1
 2ac:	80 f0       	brcs	.+32     	; 0x2ce <__mulsf3_pse+0xa0>
 2ae:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_inf>
 2b2:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_szero>
 2b6:	5f 3f       	cpi	r21, 0xFF	; 255
 2b8:	e4 f3       	brlt	.-8      	; 0x2b2 <__mulsf3_pse+0x84>
 2ba:	98 3e       	cpi	r25, 0xE8	; 232
 2bc:	d4 f3       	brlt	.-12     	; 0x2b2 <__mulsf3_pse+0x84>
 2be:	86 95       	lsr	r24
 2c0:	77 95       	ror	r23
 2c2:	67 95       	ror	r22
 2c4:	b7 95       	ror	r27
 2c6:	f7 95       	ror	r31
 2c8:	e7 95       	ror	r30
 2ca:	9f 5f       	subi	r25, 0xFF	; 255
 2cc:	c1 f7       	brne	.-16     	; 0x2be <__mulsf3_pse+0x90>
 2ce:	fe 2b       	or	r31, r30
 2d0:	88 0f       	add	r24, r24
 2d2:	91 1d       	adc	r25, r1
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	97 f9       	bld	r25, 7
 2da:	08 95       	ret

000002dc <__fp_cmp>:
 2dc:	99 0f       	add	r25, r25
 2de:	00 08       	sbc	r0, r0
 2e0:	55 0f       	add	r21, r21
 2e2:	aa 0b       	sbc	r26, r26
 2e4:	e0 e8       	ldi	r30, 0x80	; 128
 2e6:	fe ef       	ldi	r31, 0xFE	; 254
 2e8:	16 16       	cp	r1, r22
 2ea:	17 06       	cpc	r1, r23
 2ec:	e8 07       	cpc	r30, r24
 2ee:	f9 07       	cpc	r31, r25
 2f0:	c0 f0       	brcs	.+48     	; 0x322 <__fp_cmp+0x46>
 2f2:	12 16       	cp	r1, r18
 2f4:	13 06       	cpc	r1, r19
 2f6:	e4 07       	cpc	r30, r20
 2f8:	f5 07       	cpc	r31, r21
 2fa:	98 f0       	brcs	.+38     	; 0x322 <__fp_cmp+0x46>
 2fc:	62 1b       	sub	r22, r18
 2fe:	73 0b       	sbc	r23, r19
 300:	84 0b       	sbc	r24, r20
 302:	95 0b       	sbc	r25, r21
 304:	39 f4       	brne	.+14     	; 0x314 <__fp_cmp+0x38>
 306:	0a 26       	eor	r0, r26
 308:	61 f0       	breq	.+24     	; 0x322 <__fp_cmp+0x46>
 30a:	23 2b       	or	r18, r19
 30c:	24 2b       	or	r18, r20
 30e:	25 2b       	or	r18, r21
 310:	21 f4       	brne	.+8      	; 0x31a <__fp_cmp+0x3e>
 312:	08 95       	ret
 314:	0a 26       	eor	r0, r26
 316:	09 f4       	brne	.+2      	; 0x31a <__fp_cmp+0x3e>
 318:	a1 40       	sbci	r26, 0x01	; 1
 31a:	a6 95       	lsr	r26
 31c:	8f ef       	ldi	r24, 0xFF	; 255
 31e:	81 1d       	adc	r24, r1
 320:	81 1d       	adc	r24, r1
 322:	08 95       	ret

00000324 <__fp_inf>:
 324:	97 f9       	bld	r25, 7
 326:	9f 67       	ori	r25, 0x7F	; 127
 328:	80 e8       	ldi	r24, 0x80	; 128
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	60 e0       	ldi	r22, 0x00	; 0
 32e:	08 95       	ret

00000330 <__fp_nan>:
 330:	9f ef       	ldi	r25, 0xFF	; 255
 332:	80 ec       	ldi	r24, 0xC0	; 192
 334:	08 95       	ret

00000336 <__fp_pscA>:
 336:	00 24       	eor	r0, r0
 338:	0a 94       	dec	r0
 33a:	16 16       	cp	r1, r22
 33c:	17 06       	cpc	r1, r23
 33e:	18 06       	cpc	r1, r24
 340:	09 06       	cpc	r0, r25
 342:	08 95       	ret

00000344 <__fp_pscB>:
 344:	00 24       	eor	r0, r0
 346:	0a 94       	dec	r0
 348:	12 16       	cp	r1, r18
 34a:	13 06       	cpc	r1, r19
 34c:	14 06       	cpc	r1, r20
 34e:	05 06       	cpc	r0, r21
 350:	08 95       	ret

00000352 <__fp_round>:
 352:	09 2e       	mov	r0, r25
 354:	03 94       	inc	r0
 356:	00 0c       	add	r0, r0
 358:	11 f4       	brne	.+4      	; 0x35e <__fp_round+0xc>
 35a:	88 23       	and	r24, r24
 35c:	52 f0       	brmi	.+20     	; 0x372 <__fp_round+0x20>
 35e:	bb 0f       	add	r27, r27
 360:	40 f4       	brcc	.+16     	; 0x372 <__fp_round+0x20>
 362:	bf 2b       	or	r27, r31
 364:	11 f4       	brne	.+4      	; 0x36a <__fp_round+0x18>
 366:	60 ff       	sbrs	r22, 0
 368:	04 c0       	rjmp	.+8      	; 0x372 <__fp_round+0x20>
 36a:	6f 5f       	subi	r22, 0xFF	; 255
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	8f 4f       	sbci	r24, 0xFF	; 255
 370:	9f 4f       	sbci	r25, 0xFF	; 255
 372:	08 95       	ret

00000374 <__fp_split3>:
 374:	57 fd       	sbrc	r21, 7
 376:	90 58       	subi	r25, 0x80	; 128
 378:	44 0f       	add	r20, r20
 37a:	55 1f       	adc	r21, r21
 37c:	59 f0       	breq	.+22     	; 0x394 <__fp_splitA+0x10>
 37e:	5f 3f       	cpi	r21, 0xFF	; 255
 380:	71 f0       	breq	.+28     	; 0x39e <__fp_splitA+0x1a>
 382:	47 95       	ror	r20

00000384 <__fp_splitA>:
 384:	88 0f       	add	r24, r24
 386:	97 fb       	bst	r25, 7
 388:	99 1f       	adc	r25, r25
 38a:	61 f0       	breq	.+24     	; 0x3a4 <__fp_splitA+0x20>
 38c:	9f 3f       	cpi	r25, 0xFF	; 255
 38e:	79 f0       	breq	.+30     	; 0x3ae <__fp_splitA+0x2a>
 390:	87 95       	ror	r24
 392:	08 95       	ret
 394:	12 16       	cp	r1, r18
 396:	13 06       	cpc	r1, r19
 398:	14 06       	cpc	r1, r20
 39a:	55 1f       	adc	r21, r21
 39c:	f2 cf       	rjmp	.-28     	; 0x382 <__fp_split3+0xe>
 39e:	46 95       	lsr	r20
 3a0:	f1 df       	rcall	.-30     	; 0x384 <__fp_splitA>
 3a2:	08 c0       	rjmp	.+16     	; 0x3b4 <__fp_splitA+0x30>
 3a4:	16 16       	cp	r1, r22
 3a6:	17 06       	cpc	r1, r23
 3a8:	18 06       	cpc	r1, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	f1 cf       	rjmp	.-30     	; 0x390 <__fp_splitA+0xc>
 3ae:	86 95       	lsr	r24
 3b0:	71 05       	cpc	r23, r1
 3b2:	61 05       	cpc	r22, r1
 3b4:	08 94       	sec
 3b6:	08 95       	ret

000003b8 <__fp_zero>:
 3b8:	e8 94       	clt

000003ba <__fp_szero>:
 3ba:	bb 27       	eor	r27, r27
 3bc:	66 27       	eor	r22, r22
 3be:	77 27       	eor	r23, r23
 3c0:	cb 01       	movw	r24, r22
 3c2:	97 f9       	bld	r25, 7
 3c4:	08 95       	ret

000003c6 <_exit>:
 3c6:	f8 94       	cli

000003c8 <__stop_program>:
 3c8:	ff cf       	rjmp	.-2      	; 0x3c8 <__stop_program>
